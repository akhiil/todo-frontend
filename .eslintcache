[{"D:\\mern-projects\\todo-fullstack\\frontend\\src\\index.js":"1","D:\\mern-projects\\todo-fullstack\\frontend\\src\\App.js":"2","D:\\mern-projects\\todo-fullstack\\frontend\\src\\pages\\signinPage.js":"3","D:\\mern-projects\\todo-fullstack\\frontend\\src\\pages\\mainPage.js":"4","D:\\mern-projects\\todo-fullstack\\frontend\\src\\pages\\signupPage.js":"5"},{"size":199,"mtime":1611515794459,"results":"6","hashOfConfig":"7"},{"size":544,"mtime":1611516267007,"results":"8","hashOfConfig":"7"},{"size":2515,"mtime":1611679531312,"results":"9","hashOfConfig":"7"},{"size":5552,"mtime":1611771053303,"results":"10","hashOfConfig":"7"},{"size":3692,"mtime":1611776121488,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1swwoj5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\mern-projects\\todo-fullstack\\frontend\\src\\index.js",[],["26","27"],"D:\\mern-projects\\todo-fullstack\\frontend\\src\\App.js",["28"],"import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom';\nimport SigninPage from \"./pages/signinPage\";\nimport SignupPage from \"./pages/signupPage\";\nimport MainPage from \"./pages/mainPage\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={SigninPage} />\n        <Route exact path=\"/signup\" component={SignupPage} />\n        <Route exact path=\"/main\" component={MainPage} />\n      </Switch>\n    </BrowserRouter>\n\n  );\n}\nexport default App;","D:\\mern-projects\\todo-fullstack\\frontend\\src\\pages\\signinPage.js",[],["29","30"],"D:\\mern-projects\\todo-fullstack\\frontend\\src\\pages\\mainPage.js",["31","32"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styling/mainpage.css';\r\n\r\nconst App = (props) => {\r\n    const [show, setShow] = useState(true);\r\n    const [todoValue, setTodoValue] = useState('');\r\n    const [taskArray, setTaskArray] = useState([]);\r\n    // const [showCross, setShowCross] = useState(true);\r\n\r\n    useState(async () => {\r\n        //   console.log((localStorage.getItem('token')));\r\n        if (localStorage.getItem('token')) {\r\n            await axios.get('http://localhost:3000/todo', {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + localStorage.getItem('token')\r\n                }\r\n            }).then((response) => {\r\n                console.log(response.data)\r\n                const arr = [...response.data];\r\n                setTaskArray(arr)\r\n                console.log(\"akhil\", arr)\r\n            }).catch((e) => {\r\n                console.log(e);\r\n            })\r\n\r\n        }\r\n        else {\r\n            props.history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const addButton = () => {\r\n        setShow(false);\r\n    }\r\n    const addInput = (e) => {\r\n        if (!todoValue) {\r\n            return null;\r\n        }\r\n        const temp = [...taskArray, { description: todoValue, crossShow: true }];\r\n        setTaskArray(temp);\r\n        setShow(true);\r\n        setTodoValue('');\r\n        axios.post('http://localhost:3000/todo', {\r\n            description: todoValue\r\n        }, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem('token')\r\n            }\r\n        }).then((response) => {\r\n            console.log(response);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        })\r\n    }\r\n    const deleteInput = (i) => {\r\n        const temp = [...taskArray];\r\n        temp.splice(i, 1);\r\n        setTaskArray(temp);\r\n        axios.delete(`http://localhost:3000/todo/${taskArray[i]._id}`, {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem('token')\r\n            }\r\n        }).then((response) => {\r\n            console.log(response);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        })\r\n    }\r\n    const logoutUser = () => {\r\n        localStorage.clear();\r\n        props.history.push('/');\r\n    }\r\n    // console.log(taskArray[0]._id);\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"header\">\r\n                <p className='headerText' style={{ fontSize: 22, marginLeft: 20 }}>Todo-app</p>\r\n                <a className=\"headerText\">{localStorage.getItem('name')}</a>\r\n                <a onClick={logoutUser} className='headerText' >Logout</a>\r\n            </div>\r\n\r\n            <div style={{ textAlign: 'center' }}>\r\n                {show ? <button onClick={addButton} className='add'>ADD CONTENT </button>\r\n                    :\r\n                    <div>\r\n                        <input value={todoValue}\r\n                            onChange={(e) => setTodoValue(e.target.value)}\r\n                            placeholder=\"enter the content\" className=\"addInput\" />\r\n                        <button\r\n                            onClick={addInput}\r\n                            style={{\r\n                                backgroundColor: 'darkgreen',\r\n                                marginLeft: -15,\r\n                                height: 45,\r\n                                fontSize: 20,\r\n                                fontWeight: 'bold',\r\n                                color: 'white',\r\n                                width: 40\r\n                            }}>+</button>\r\n                    </div>}\r\n            </div>\r\n            <div>\r\n                {taskArray.map((item, index) => {\r\n                    return (\r\n                        <div style={{ display: 'flex', margin: 10, marginLeft: 100 }}>\r\n                            <div\r\n                                onMouseEnter={() => {\r\n                                    const temp = [...taskArray];\r\n                                    temp[index].crossShow = false;\r\n                                    setTaskArray(temp);\r\n\r\n                                }}\r\n                                onMouseLeave={() => {\r\n                                    const temp = [...taskArray];\r\n                                    temp[index].crossShow = true;\r\n                                    setTaskArray(temp);\r\n                                }}\r\n                                style={{\r\n                                    borderRadius: 100,\r\n                                    backgroundColor: item.crossShow ? 'darkslateblue' : 'darkred',\r\n                                    height: 25,\r\n                                    width: 25,\r\n                                    textAlign: 'center',\r\n                                    padding: 10,\r\n                                }}>\r\n                                {item.crossShow ?\r\n                                    <p style={{ marginTop: 3, color: 'white', fontWeight: 'bold' }}>{index + 1}</p> :\r\n                                    <p onClick={() => deleteInput(index)} style={{ marginTop: 3, color: 'white', fontWeight: 'bold' }}>X</p>}\r\n                            </div>\r\n                            <div className='todoItem'>\r\n                                <p style={{ fontSize: 20, fontFamily: 'roboto' }}>{item.description}</p>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","D:\\mern-projects\\todo-fullstack\\frontend\\src\\pages\\signupPage.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":5,"column":3,"nodeType":"39","messageId":"40","endLine":5,"endColumn":7},{"ruleId":"33","replacedBy":"41"},{"ruleId":"35","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":80,"column":17,"nodeType":"45","endLine":80,"endColumn":43},{"ruleId":"43","severity":1,"message":"44","line":81,"column":17,"nodeType":"45","endLine":81,"endColumn":65},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["46"],["47"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]